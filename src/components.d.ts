/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface EnlSideDrawer {
    'close': () => Promise<void>;
    'open': () => Promise<void>;
    'opened': boolean;
  }
  interface EnlSlider {
    'exccess': boolean;
    'nextSlide': () => Promise<void>;
    'prevSlide': () => Promise<void>;
    'slidesToShow': number;
  }
}

declare namespace LocalJSX {
  interface EnlSideDrawer extends JSXBase.HTMLAttributes {
    'onOnClose'?: (event: CustomEvent<any>) => void;
    'onOnOpen'?: (event: CustomEvent<any>) => void;
    'onOnToggle'?: (event: CustomEvent<boolean>) => void;
    'opened'?: boolean;
  }
  interface EnlSlider extends JSXBase.HTMLAttributes {
    'exccess'?: boolean;
    'slidesToShow'?: number;
  }

  interface IntrinsicElements {
    'enl-side-drawer': EnlSideDrawer;
    'enl-slider': EnlSlider;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


declare global {



  interface HTMLEnlSideDrawerElement extends Components.EnlSideDrawer, HTMLStencilElement {}
  var HTMLEnlSideDrawerElement: {
    prototype: HTMLEnlSideDrawerElement;
    new (): HTMLEnlSideDrawerElement;
  };

  interface HTMLEnlSliderElement extends Components.EnlSlider, HTMLStencilElement {}
  var HTMLEnlSliderElement: {
    prototype: HTMLEnlSliderElement;
    new (): HTMLEnlSliderElement;
  };

  interface HTMLElementTagNameMap {
    'enl-side-drawer': HTMLEnlSideDrawerElement;
    'enl-slider': HTMLEnlSliderElement;
  }

  interface ElementTagNameMap extends HTMLElementTagNameMap {}
}

