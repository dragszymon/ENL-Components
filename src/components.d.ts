/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface EnlSideDrawer {
    'close': () => Promise<void>;
    'open': () => Promise<void>;
    'opened': boolean;
  }
  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
}

declare namespace LocalJSX {
  interface EnlSideDrawer extends JSXBase.HTMLAttributes {
    'onOnClose'?: (event: CustomEvent<any>) => void;
    'onOnOpen'?: (event: CustomEvent<any>) => void;
    'onOnToggle'?: (event: CustomEvent<boolean>) => void;
    'opened'?: boolean;
  }
  interface MyComponent extends JSXBase.HTMLAttributes {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }

  interface IntrinsicElements {
    'enl-side-drawer': EnlSideDrawer;
    'my-component': MyComponent;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


declare global {



  interface HTMLEnlSideDrawerElement extends Components.EnlSideDrawer, HTMLStencilElement {}
  var HTMLEnlSideDrawerElement: {
    prototype: HTMLEnlSideDrawerElement;
    new (): HTMLEnlSideDrawerElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLElementTagNameMap {
    'enl-side-drawer': HTMLEnlSideDrawerElement;
    'my-component': HTMLMyComponentElement;
  }

  interface ElementTagNameMap extends HTMLElementTagNameMap {}
}

